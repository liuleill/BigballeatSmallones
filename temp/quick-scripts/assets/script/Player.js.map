{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","touchControl","default","type","Node","onLoad","jumpAction","runJumpAction","tween","node","then","start","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","addTouchEvent","TOUCH_START","event","viewSize","view","getVisibleSize","touch","_point","x","width","TOUCH_END","onDestoryKey","off","jumpUp","by","y","easing","jumpDown","sequence","repeatForever","keyCode","macro","KEY","left","right","a","d","update","dt","Math","abs"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/script","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        jumpHeight: 0,\n        jumpDuration: 0,\n        maxMoveSpeed: 0,\n        accel: 0,\n\n        touchControl: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    \n\n    onLoad: function(){\n        var jumpAction = this.runJumpAction();\n        cc.tween(this.node).then(jumpAction).start();\n\n        this.accLeft = false;//还没激活向左边的加速度\n        this.accRight = false;\n\n        this.xSpeed = 0;  //水平速度为0\n\n        //初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);  \n\n\n\n        // //监听触摸开始事件\n    \t// this.node.on(cc.Node.EventType.TOUCH_START,function(t){\n    \t// \t//函数体内写事件发生时的事情\n    \t// \t//当触摸开始是打印以下字样\n        //     console.log(\"触摸开始\");\n        //     on_touch_move(t);\n    \t// },this);\n    \t// //监听触摸移动事件\n    \t// //使用自定义回调函数\n    \t// this.node.on(cc.Node.EventType.TOUCH_MOVE,this.on_touch_move,this);\n    \t// //结束触摸移动事件\n    \t// //this.node.off(cc.Node.EventType.TOUCH_MOVE,this.on_touch_move,this);\n    \t\n    \t// //监听作用域内触摸抬起事件\n    \t// this.node.on(cc.Node.EventType.TOUCH_ENDED,function(t){\n    \t// \tconsole.log(\"触摸内结束\");\n    \t// },this);\n    \t// //监听作用域外触摸抬起事件\n    \t// this.node.on(cc.Node.EventType.TOUCH_CANCEL,function(t){\n        //     console.log(\"触摸外开始\");\n            \n        // },this);\n        \n        this.addTouchEvent(this.touchControl);\n    },\n\n    addTouchEvent: function(node) {\n        node.on(cc.Node.EventType.TOUCH_START,(event)=>{\n            let viewSize = cc.view.getVisibleSize();\n            //event.touch._point.x > viewSize.width/2 ?  this.accLeft = true : this.accRight = true;\n            event.touch._point.x < viewSize.width/2 ?  this.accLeft = true : this.accRight = true;\n            \n        });\n        node.on(cc.Node.EventType.TOUCH_END,()=>{\n            this.accLeft = false;\n            this.accRight = false;\n        });\n    },\n\n    // //自定义回调函数,参数t\n    // on_touch_move(t){\n    // \t//定义一个n_pos变量存储当前触摸点的位置\n    // \tvar n_pos = t.getLocation();\n    // \t//打印触摸点的坐标，x坐标，y坐标\n    // \tconsole.log(n_pos,n_pos.x,n_pos.y);\n    // \t//定义变量delta存储变化距离\n    // \tvar delta = t.getDelta();\n    // \t//变化当前节点位置使其跟随触摸点,实现按住移动效果\n    // \tthis.node.x += delta.x;\n    // \tthis.node.y += delta.y;\n    // },\n\n    onDestoryKey () {\n        //取消键盘监听事件\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    runJumpAction () {\n        var jumpUp = cc.tween().by(this.jumpDuration, {y: this.jumpHeight}, {easing: 'sineOut'});\n        // 下落\n        var jumpDown = cc.tween().by(this.jumpDuration, {y: -this.jumpHeight}, {easing: 'sineIn'});\n\n        // 创建一个缓动，按 jumpUp、jumpDown 的顺序执行动作\n        var tween = cc.tween().sequence(jumpUp, jumpDown);\n        // 不断重复\n        return cc.tween().repeatForever(tween);\n    },\n\n    onKeyDown (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.left : \n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.right:\n                this.accRight = true;\n                break;\n\n            case cc.macro.KEY.a : \n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },   \n    \n    onKeyUp (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.left:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.right:\n                this.accRight = false;\n                break;\n\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    start () {\n\n    },\n\n    update: function(dt) {\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        }\n        else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        this.node.x += this.xSpeed * dt;\n    }\n});\n"]}