{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AADJ,KAHP;;AAOL;;AAEA;AACAC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAhBI;;AAkBLK,cAAU,oBAAW;AACjB;AACA,aAAKR,IAAL,CAAUS,YAAV;;AAEA;AACA,aAAKT,IAAL,CAAUU,SAAV;;AAEA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KA3BI;AA4BLC,SA5BK,mBA4BI,CAER,CA9BI;;;AAgCLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKhB,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC5C;AACA,iBAAKW,QAAL;AACA;AACH;;AAED;AACA,YAAIO,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAkB,KAAKhB,IAAL,CAAUiB,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;;AA5CI,CAAT","file":"Star.js","sourceRoot":"../../../../assets/script","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n    getPlayerDistance: function () {\n        // 根据 Player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked: function() {\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n\n        //调用Game脚本的得分方法\n        this.game.gainScore();\n\n        // 然后销毁当前星星节点\n        this.node.destroy();\n    },\n    start () {\n\n    },\n\n    update: function (dt) {\n        // 每帧判断星星和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n\n        //根据Game脚本的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n\n});\n"]}